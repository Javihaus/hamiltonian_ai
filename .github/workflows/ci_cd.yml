name: CI/CD
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref || github.ref_name }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    - name: Clean previous builds
      run: |
        rm -rf dist/
        rm -rf build/
        rm -rf *.egg-info/
        find . -type d -name "*.egg-info" -exec rm -rf {} +
        find . -type d -name "__pycache__" -exec rm -rf {} +
        find . -type f -name "*.pyc" -delete
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8
    
    - name: Run Black
      run: black .
    
    - name: Run flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --ignore=E302,W293,W292,E501,F401,F841
      continue-on-error: true
    
    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
    
    - name: Commit changes
      if: github.ref != 'refs/heads/main'
      run: |
        if [[ -n "$(git status --porcelain)" ]]; then
          git add .
          git commit -m "Apply automatic formatting changes"
          git push
        fi
      
    - name: Commit changes to main
      if: github.ref == 'refs/heads/main'
      run: |
        if [[ -n "$(git status --porcelain)" ]]; then
          git add .
          git commit -m "Apply automatic formatting changes"
          git push origin HEAD:main
        fi

  publish:
    needs: [lint-and-format]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    - name: Clean environment
      run: |
        rm -rf dist/
        rm -rf build/
        rm -rf *.egg-info/
        find . -type d -name "*.egg-info" -exec rm -rf {} +
        find . -type d -name "__pycache__" -exec rm -rf {} +
        find . -type f -name "*.pyc" -delete
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: List built packages
      run: |
        echo "Built packages:"
        ls -l dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.8.11
      with:
        password: ${{ secrets.PYPI_PASSWORD }}
        verbose: true
            uses: c-hive/gha-remove-artifacts@v1
            with:
              age: '24 hours'
        skip-recent: 5
